/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package projectmanagementsoftware.gui;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.MouseListener;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import projectmanagementsoftware.wbs.Deliverable;
import projectmanagementsoftware.wbs.WBSNode;
import projectmanagementsoftware.wbs.WorkPackage;

/**
 *
 * @author david
 */
public class ProjectFileSystemTreeNode extends javax.swing.JPanel {
    private static final int PADDING = 15;
    private static final Icon noDropdownIcon = new ImageIcon(ProjectFileSystemTreeNode.class.getResource("/res/icons/empty.png"));
    private static final Icon dropdownExpandedIcon = new ImageIcon(ProjectFileSystemTreeNode.class.getResource("/res/icons/arrow_down.png"));
    private static final Icon dropdownNotExpandedIcon = new ImageIcon(ProjectFileSystemTreeNode.class.getResource("/res/icons/arrow_right.png"));
    private static final Icon fileIcon = new ImageIcon(ProjectFileSystemTreeNode.class.getResource("/res/icons/file.png"));
    private static final Icon directoryIcon = new ImageIcon(ProjectFileSystemTreeNode.class.getResource("/res/icons/folder.png"));
    
    private int level;
    private WBSNode data;
    private Boolean expanded;
    private Boolean selected;

    
    /**
     * Creates new form FileSystemTreeNode
     */
    public ProjectFileSystemTreeNode(WBSNode data, int level) {
        initComponents();
        
        this.data = data;
        this.level = level;
        this.expanded = true;
        this.selected = false;
        this.reloadComponent();
    }

    private void reloadComponent() {
        Dimension size = new Dimension(PADDING * this.level, 20);
        this.padding.setPreferredSize(size);
        this.padding.setMaximumSize(size);
        this.padding.setMinimumSize(size);
        this.mainLabel.setText(data.getName());
        
        if (this.data instanceof WorkPackage) {
            this.dropdownArrow.setIcon(dropdownExpandedIcon);
            this.mainLabel.setIcon(directoryIcon);
        }
        
        if (this.data instanceof Deliverable) {
            this.dropdownArrow.setIcon(noDropdownIcon);
            this.mainLabel.setIcon(fileIcon);
        }
    }
    
    @Override
    public void addMouseListener(MouseListener listener) {
        super.addMouseListener(listener);
        this.padding.addMouseListener(listener);
        
        if (this.data instanceof Deliverable)
            this.dropdownArrow.addMouseListener(listener);
    }
    public void addExpandMouseListener(MouseListener listener) {
        this.dropdownArrow.addMouseListener(listener);
    }
    
    public int getLevel() {
        return level;
    }

    public void setLevel(int level) {
        this.level = level;
        this.reloadComponent();
    }

    public WBSNode get() {
        return data;
    }

    public void set(WBSNode data) {
        this.data = data;
        this.reloadComponent();
    }

    public Boolean getExpanded() {
        return expanded;
    }

    public void setExpanded(Boolean expanded) {
        if (this.data instanceof Deliverable)
            return;
        
        if (expanded && !this.expanded)
            this.dropdownArrow.setIcon(dropdownExpandedIcon);
        
        if (!expanded && this.expanded)
            this.dropdownArrow.setIcon(dropdownNotExpandedIcon);
        
        this.expanded = expanded;
    }

    public Boolean getSelected() {
        return selected;
    }

    public void setSelected(Boolean selected) {
        if (selected) {
            this.setBackground(new Color(51,51,255));
            this.padding.setBackground(new Color(51,51,255));
            
            if (this.data instanceof Deliverable)
                this.dropdownArrow.setBackground(new Color(51,51,255));
        } else {
            this.setBackground(null);
            this.padding.setBackground(null);
            this.dropdownArrow.setBackground(null);
        }
        
        this.selected = selected;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        padding = new javax.swing.JPanel();
        dropdownArrow = new javax.swing.JLabel();
        mainLabel = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(250, 20));
        setMinimumSize(new java.awt.Dimension(250, 20));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(250, 20));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        padding.setMaximumSize(new java.awt.Dimension(0, 0));
        padding.setPreferredSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout paddingLayout = new javax.swing.GroupLayout(padding);
        padding.setLayout(paddingLayout);
        paddingLayout.setHorizontalGroup(
            paddingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        paddingLayout.setVerticalGroup(
            paddingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        add(padding);

        dropdownArrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/empty.png"))); // NOI18N
        add(dropdownArrow);

        mainLabel.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        mainLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/folder.png"))); // NOI18N
        mainLabel.setText("Paquete de Trabajo");
        mainLabel.setMaximumSize(new java.awt.Dimension(1000000, 10000000));
        mainLabel.setMinimumSize(new java.awt.Dimension(0, 0));
        add(mainLabel);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dropdownArrow;
    private javax.swing.JLabel mainLabel;
    private javax.swing.JPanel padding;
    // End of variables declaration//GEN-END:variables
}
