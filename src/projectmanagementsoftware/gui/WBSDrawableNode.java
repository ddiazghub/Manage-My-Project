/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package projectmanagementsoftware.gui;

import java.awt.Color;
import java.awt.event.MouseListener;
import projectmanagementsoftware.tree.TreeNode;
import projectmanagementsoftware.utils.ColorHelpers;
import projectmanagementsoftware.wbs.Deliverable;
import projectmanagementsoftware.wbs.WBSNode;

/**
 *
 * @author david
 */
public class WBSDrawableNode extends javax.swing.JPanel {
    private float xPos;
    private float yPos;
    private WBSNode data;
    private boolean selected;
    private boolean expanded;
    private boolean visited;
    private TreeNode<WBSDrawableNode> node;
    private Color color;
    
    public WBSDrawableNode(WBSNode data, TreeNode<WBSDrawableNode> node, float x, float y) {
        this.initComponents();
        
        this.yPos = y;
        this.nameLabel.setText(data.getName());
        this.xPos = x;
        this.yPos = y;
        this.data = data;
        this.selected = false;
        this.visited = false;
        this.setExpanded(true);
        this.node = node;
        this.color = ColorHelpers.nextColor(0.5f, 0.95f);
        this.setOpaque(true);
        this.setBackground(color);
        
        if (data instanceof Deliverable) {
            this.remove(this.expandButton);
            this.expandButton = null;
        }
        
        this.revalidate();
        this.repaint();
    }

    public TreeNode<WBSDrawableNode> getNode() {
        return node;
    }

    
    public WBSNode get() {
        return data;
    }

    public void set(WBSNode data) {
        this.data = data;
    }

    public boolean isSelected() {
        return selected;
    }

    public void setSelected(boolean selected) {
        if (selected) {
            this.setBackground(new Color(51,51,255));
            this.nameLabel.setBackground(new Color(51,51,255));
        }
        
        if (!selected) {
            if (this.visited) {
                this.setVisited(true);
            } else {
                this.setBackground(this.color);
                this.nameLabel.setBackground(this.color);
            }
        }
        
        this.selected = selected;
    }

    public boolean isExpanded() {
        return expanded;
    }

    public void setExpanded(boolean expanded) {
        if (expanded)
            this.expandButton.setText("-");
        else
            this.expandButton.setText("+");
        
        this.expanded = expanded;
    }
    public boolean isVisited() {
        return visited;
    }

    public void setVisited(boolean visited) {
        if (visited) {
            this.setBackground(new Color(255, 255, 0));
            this.nameLabel.setBackground(new Color(255, 255, 0));
        }
        
        if (!visited) {
            if (this.selected) {
                this.setSelected(true);
            } else {
                this.setBackground(this.color);
                this.nameLabel.setBackground(this.color);
            }
        }
        
        this.visited = visited;
    }
    

    public float getXPos() {
        return xPos;
    }

    public void setXPos(float x) {
        this.xPos = x;
    }

    public float getYPos() {
        return yPos;
    }

    public void setYPos(float y) {
        this.yPos = y;
    }
    
    public void addExpandMouseListener(MouseListener listener) {
        if (this.expandButton == null)
            return;
        
        this.expandButton.addMouseListener(listener);
    }
    
    /**
     * Creates new form WBSDrawableNode
     */
    public WBSDrawableNode() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        expandButton = new javax.swing.JButton();

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), null, null));
        setMinimumSize(new java.awt.Dimension(0, 0));
        setPreferredSize(new java.awt.Dimension(154, 55));
        setLayout(new java.awt.BorderLayout());

        nameLabel.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel.setText("JLabel");
        add(nameLabel, java.awt.BorderLayout.CENTER);

        expandButton.setText("+");
        expandButton.setPreferredSize(new java.awt.Dimension(25, 12));
        expandButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expandButtonActionPerformed(evt);
            }
        });
        add(expandButton, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void expandButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expandButtonActionPerformed
        
    }//GEN-LAST:event_expandButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton expandButton;
    private javax.swing.JLabel nameLabel;
    // End of variables declaration//GEN-END:variables
}
